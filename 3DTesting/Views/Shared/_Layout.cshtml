<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

</head>
<body style="/* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#000000+0,de47ac+100 */
background: #000000; /* Old browsers */
background: -moz-linear-gradient(top, #000000 0%, #de47ac 100%); /* FF3.6-15 */
background: -webkit-linear-gradient(top, #000000 0%,#de47ac 100%); /* Chrome10-25,Safari5.1-6 */
background: linear-gradient(to bottom, #000000 0%,#de47ac 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#000000', endColorstr='#de47ac',GradientType=0 ); /* IE6-9 */">
    <script src="https://threejs.org/build/three.js" type="text/javascript"></script>

    <script src="https://threejs.org/examples/js/controls/OrbitControls.js"></script>
    <script src="https://threejs.org/examples/js/loaders/GLTFLoader.js" type="text/javascript"></script>
    <script src="https://threejs.org/examples/js/WebGL.js" type="text/javascript"></script>

    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - My ASP.NET Application</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
    <script type="text/javascript">

        var frustumSize = 600;

        var SCREEN_WIDTH = window.innerWidth;
        var SCREEN_HEIGHT = window.innerHeight;
        var aspect = SCREEN_WIDTH / SCREEN_HEIGHT;

        var scene = new THREE.Scene();
        var camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.25, 20);
        camera.position.set(-1.8, 0.9, 2.7);

        var controls = new THREE.OrbitControls(camera);
        controls.autoRotate = true;
        controls.target.set(0, -0.2, -0.2);
        controls.update();

        var renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });
        renderer.setPixelRatio(window.devicePixelRatio);
        renderer.setSize(window.innerWidth / 4, window.innerHeight / 4);
        renderer.gammaOutput = true;
        var jumbotron = document.body.getElementsByClassName("jumbotron")[0];
        jumbotron.appendChild(renderer.domElement);

        //var geometry = new THREE.BoxGeometry(1, 1, 1);
        //var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });
        //var cube = new THREE.Mesh(geometry, material);
        //scene.add(cube);

        // envmap
        var path = 'https://threejs.org/examples/textures/cube/Bridge2/';
        var format = '.jpg';
        var envMap = new THREE.CubeTextureLoader().load([
            path + 'posx' + format, path + 'negx' + format,
            path + 'posy' + format, path + 'negy' + format,
            path + 'posz' + format, path + 'negz' + format
        ]);
        //scene.background = new THREE.Color("rgba(255,255,255,0)");
        var light = new THREE.HemisphereLight(0xbbbbff, 0x444422);
        light.position.set(0, 1, 0);
        scene.add(light);

        // model
        var loader = new THREE.GLTFLoader();
        loader.load('https://threejs.org/examples/models/gltf/DamagedHelmet/glTF/DamagedHelmet.gltf', function (gltf) {
            gltf.scene.traverse(function (child) {
                //if (child.isMesh) {
                //    child.material.envMap = envMap;
                //}
            });
            scene.add(gltf.scene);
        }, undefined, function (e) {
            console.error(e);
        });


        function animate() {
            requestAnimationFrame(animate);
            controls.update();
            //scene.children[1].rotation.y += Math.PI / 200
            renderer.render(scene, camera);
        }
        animate();

    </script>

</body>
</html>
